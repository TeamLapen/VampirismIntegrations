repositories {
    maven {
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        //Local repo for custom forge builds.
        //Is not required to exist
        name = "LocalForge"
        url = "../../MinecraftForge/repo/"
    }
    maven {
        name = "Local2"
        url = "../../../.m2/repository"
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        name = "Maxanier"
        url = "https://maxanier.de/maven2/"
    }
    maven {
        name 'shinoow'
        url 'https://dl.bintray.com/shinoow/maven/'
    }

    maven {
        name = "Evilcraft JFrog"
        url = "https://oss.jfrog.org/artifactory/simple/libs-release/"
    }
    maven {
        name = "ChickenBones"
        url = "http://chickenbones.net/maven/"
    }


    mavenCentral()
}

minecraft {
    mappings channel: "${project.mcp_channel}".toString(), version: "${project.mcp_mappings}".toString()
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            taskName 'runClient1'
            main 'net.minecraftforge.userdev.LaunchTesting'
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            workingDirectory project.file('run/client1').canonicalPath
            jvmArg '-ea:de.teamlapen...'

            mods {
                vampirism_integrations {
                    source sourceSets.main

                }
            }
        }
        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            workingDirectory project.file('run/server').canonicalPath
            jvmArg '-ea:de.teamlapen...'

            mods {
                vampirism_integrations {
                    source sourceSets.main
                }
            }
        }
    }

}


dependencies {
    minecraft([
            group  : "net.minecraftforge",
            name   : "forge",
            version: "${project.minecraft_version}-${project.forge_version}"
    ])

    compile fg.deobf("de.teamlapen.vampirism:Vampirism:" + project.minecraft_version + "-" + project.vampirism_version)

    compileOnly fg.deobf('com.github.glitchfiend.biomesoplenty:BiomesOPlenty:' + project.minecraft_version + '-' + project.bop_version + ':api')
    //Does not start in dev
    //runtimeOnly fg.deobf('com.github.glitchfiend.biomesoplenty:BiomesOPlenty:' + project.minecraft_version + '-' + project.bop_version + ':universal')
    compile fg.deobf("curse.maven:hwyla:" + project.hywla_fileid)
    compile fg.deobf("curse.maven:blood-magic:" + project.bloodmagic_fileid) //We only want API but curse maven and forge gradle don't like me

    //Optional
    runtimeOnly fg.deobf("de.maxanier.guideapi:Guide-API-VP:${project.guideapi_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.minecraft_version}:${project.jei_version}") //Full for runtime

    //Old
    //deobfCompile 'com.shinoow.abyssalcraft:AbyssalCraft:'+project.minecraft_version+'-'+project.abyssalcraft_version // +':api'
    //optionalRuntime 'com.shinoow.abyssalcraft:AbyssalCraft:'+project.minecraft_version+'-'+project.abyssalcraft_version
    //deobfCompile "toroquest:toroquest:1.12.2:"+project.toroquest_version
    //deobfCompile "com.wayoftime.bloodmagic:BloodMagic:"+project.bloodmagic_version
    //deobfCompile  "org.cyclops.evilcraft:EvilCraft:"+project.evilcraft_version
    //optionalRuntime "slimeknights.mantle:Mantle:"+project.mantle_version
    //deobfCompile "slimeknights:TConstruct:"+project.tconstruct_version
    //optionalRuntime "codechicken:CodeChickenLib:"+project.codechickenlib_version+":universal"
    //deobfCompile "ancient-warfare-2:ancientwarfare:1.12.2:"+project.ancient_warfare2_version

}

processResources {

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        expand 'version': project.mod_version, 'mcversion': minecraft_version, 'forge_version': forge_version, 'vampirism_version': project.vampirism_version
    }


    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
    outputs.upToDateWhen { false }

    exclude '**/Thumbs.db'
}


