repositories {
    mavenCentral()

    maven { url = 'https://files.minecraftforge.net/maven' }
    maven { url 'https://modmaven.dev/' }
    maven { url = "https://maven.itsmeow.dev/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url "https://maven.bai.lol" }
    maven { url = 'https://maven.blamejared.com' }
    maven { url = "https://maven.paube.de/releases" }

    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "Maxanier"
        url = "https://maven.maxanier.de/releases"
    }

    maven {
        name = "Evilcraft JFrog"
        url = "https://oss.jfrog.org/artifactory/simple/libs-release/"
    }
    maven {
        name = "ChickenBones"
        url = "https://chickenbones.net/maven/"
    }

    maven {
        name = "Minecolonies Maven - Newer"
        url = "https://ldtteam.jfrog.io/ldtteam/mods-maven"
    }

    maven {
        //Local repo for custom forge builds.
        //Is not required to exist
        name = "LocalForge"
        url = "../../MinecraftForge/repo/"
    }
    maven {
        name = "Local2"
        url = "../../../.m2/repository"
    }

}

minecraft {
    mappings channel: project.mcp_channel, version: project.mcp_mappings
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        configureEach {
            property 'forge.logging.console.level', 'debug'
            //property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            jvmArg '-ea:de.teamlapen...'
            mods {
                vampirism_integrations {
                    source sourceSets.main
                }
            }
        }
        client {
            property 'vampirism_target', 'dev_client'
            workingDirectory project.file('run/client').canonicalPath
        }
        server {
            property 'vampirism_target', 'dev_server'
            workingDirectory project.file('run/server').canonicalPath
        }
    }

}


dependencies {
    minecraft group: "net.minecraftforge", name: "forge", version: "${minecraft_version}-${forge_version}"

    // Vampirism - https://www.curseforge.com/minecraft/mc-mods/vampirism
    // Maven - https://maven.maxanier.de/releases/de/teamlapen/vampirism/Vampirism
    implementation fg.deobf("de.teamlapen.vampirism:Vampirism:" + project.vampirism_mcversion + "-" + project.vampirism_version)

    // Biomes O' Plenty - https://www.curseforge.com/minecraft/mc-mods/biomes-o-plenty
    if (include_biomes_o_plenty.toBoolean()) {
        compileOnly fg.deobf('com.github.glitchfiend:BiomesOPlenty:' + project.minecraft_version + '-' + project.bop_version) // + ":api", but bugged right now
        runtimeOnly fg.deobf('com.github.glitchfiend:BiomesOPlenty:' + project.minecraft_version + '-' + project.bop_version)
    }

    // Terrablender - https://www.curseforge.com/minecraft/mc-mods/terrablender
    if (include_terrablender.toBoolean()) {
        runtimeOnly fg.deobf('com.github.glitchfiend:TerraBlender-forge:' + project.minecraft_version + '-' + project.terrablender_version)
    }

    // Hwyla / WTHIT - https://www.curseforge.com/minecraft/mc-mods/wthit-forge
    // Bad Packets - https://www.curseforge.com/minecraft/mc-mods/badpackets
    if (include_waila.toBoolean()) {
        compileOnly fg.deobf("mcp.mobius.waila:wthit-api:forge-${project.wthit_version}")
        runtimeOnly fg.deobf("mcp.mobius.waila:wthit:forge-${project.wthit_version}")
        runtimeOnly fg.deobf("lol.bai:badpackets:forge-${project.bad_packets_version}")
    }

    if (include_jade.toBoolean()) {
        compileOnly fg.deobf("curse.maven:jade-324717:" + project.jade_version)
        runtimeOnly fg.deobf("curse.maven:jade-324717:" + project.jade_version)
    }

    // Tough as Nails - https://www.curseforge.com/minecraft/mc-mods/tough-as-nails
    if (include_tough_as_nails.toBoolean()) {
        compileOnly fg.deobf("com.github.glitchfiend:ToughAsNails:" + project.tan_version + ":api")
        runtimeOnly fg.deobf("com.github.glitchfiend:ToughAsNails:" + project.tan_version)
    }

    // Blood Magic - https://www.curseforge.com/minecraft/mc-mods/blood-magic
    if (include_bloodmagic.toBoolean()) {
        implementation fg.deobf("curse.maven:blood-magic-224791:" + project.bloodmagic_fileid) //We only want API but curse maven and forge gradle don't like me
    }

    // Evilcraft - https://www.curseforge.com/minecraft/mc-mods/evilcraft
    // Cyclops Core - https://www.curseforge.com/minecraft/mc-mods/cyclops-core
    if (include_evilcraft.toBoolean()) {
        implementation fg.deobf("curse.maven:evilcraft-74610:" + project.evilcraft_fileid)
        runtimeOnly fg.deobf("curse.maven:cyclops-core-232758:" + project.cyclopscore_fileid)
    }

    // Immersive Engineering - https://www.curseforge.com/minecraft/mc-mods/immersive-engineering
    if (include_immersive_engineering.toBoolean()) {
        implementation fg.deobf("curse.maven:immersive-engineering-231951:"+project.immersiveengineering_fileid)
    }

    // Mekanism - https://www.curseforge.com/minecraft/mc-mods/mekanism
    if (include_mekanism.toBoolean()) {
        compileOnly fg.deobf("mekanism:Mekanism:${project.mekanism_version}:api")
        runtimeOnly fg.deobf("mekanism:Mekanism:${project.mekanism_version}")
    }


    // Consecration - https://www.curseforge.com/minecraft/mc-mods/consecration
    if (include_consecration.toBoolean()) {
        implementation fg.deobf("curse.maven:consecration-284001:" + project.consecration_fileid)
    }

    // MCA Reborn - https://www.curseforge.com/minecraft/mc-mods/minecraft-comes-alive-reborn
    if (include_minecraft_comes_alive.toBoolean()) {
        implementation fg.deobf("curse.maven:minecraft-comes-alive-reborn-535291:" + project.mca_fileid)
    }

    // Nyctophobia / Graveyard biome - https://www.curseforge.com/minecraft/mc-mods/nyctophobia-forge
    if (include_nyctophobia.toBoolean()) {
        implementation fg.deobf("curse.maven:the-graveyard-biomes-forge-584868:" + project.nyctophobia_fileid)
    }

    // Minecolonies - https://www.curseforge.com/minecraft/mc-mods/minecolonies
    // Structurize - https://www.curseforge.com/minecraft/mc-mods/structurize
    // Domum Ornamentum - https://www.curseforge.com/minecraft/mc-mods/domum-ornamentum
    // Block UI - https://www.curseforge.com/minecraft/mc-mods/blockui
    if (include_minecolonies.toBoolean()) {
        implementation fg.deobf("curse.maven:minecolonies-245506:4708238")
        runtimeOnly fg.deobf("curse.maven:structurize-298744:4704639")
        runtimeOnly fg.deobf("curse.maven:domum-ornamentum-527361:4702884")
        runtimeOnly fg.deobf("curse.maven:blockui-522992:4713627")
    }

    // Tinkers Construction - https://www.curseforge.com/minecraft/mc-mods/tinkers-construct
    // Mantle - https://www.curseforge.com/minecraft/mc-mods/mantle
    if (include_tinkers_construction.toBoolean()) {
        implementation fg.deobf("slimeknights.tconstruct:TConstruct:"+project.tconstruct_version)
        runtimeOnly fg.deobf("slimeknights.mantle:Mantle:"+project.mantle_version)
    }

    // Survive - https://www.curseforge.com/minecraft/mc-mods/survive
    // UnionLib - https://www.curseforge.com/minecraft/mc-mods/unionlib
    if (include_survive.toBoolean()) {
        compileOnly fg.deobf("com.stereowalker.survive:Survive:${project.survive_version}")
        runtimeOnly fg.deobf("com.stereowalker.survive:Survive:${project.survive_version}")
        runtimeOnly fg.deobf("com.stereowalker.unionlib:UnionLib:${project.unionlib_version}")
    }

    // Diet - https://www.curseforge.com/minecraft/mc-mods/diet
    if (include_diet.toBoolean()) {
        implementation fg.deobf("curse.maven:diet-443570:" + project.diet_fileid)
    }

    // Architectury - https://www.curseforge.com/minecraft/mc-mods/architectury-api
    if (include_architectury.toBoolean()) {
        runtimeOnly fg.deobf("dev.architectury:architectury-forge:" + project.architectury_version)
    }

    if (include_betteranimalsplus.toBoolean()) {
        implementation fg.deobf("curse.maven:betteranimalsplus-303557:"+project.betteranimalsplus_fileid)
    }

    if (include_betteranimals.toBoolean()) {
        implementation fg.deobf("curse.maven:betteranimals-287443:"+project.betteranimals_fileid)
    }

    // Player Companions - https://www.curseforge.com/minecraft/mc-mods/player-companions
    if (include_player_companion.toBoolean()) {
        implementation fg.deobf("curse.maven:player-companions-552456:" + project.playercompanion_fileid)
    }

    // CraftTweaker
    if (include_crafttweaker.toBoolean()) {
        compileOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${project.crafttweaker_version}")
        runtimeOnly fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${project.crafttweaker_version}") // For testing
    }

    // Guide API - https://www.curseforge.com/minecraft/mc-mods/guide-api-village-and-pillage
    if (include_guide_api.toBoolean()) {
        runtimeOnly fg.deobf("de.maxanier.guideapi:Guide-API-VP:${project.guideapi_version}")
    }

    // JEI - https://www.curseforge.com/minecraft/mc-mods/jei
    if (include_jei.toBoolean()) {
        runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:${project.jei_version}")
    }

    if (include_cold_sweat.toBoolean()) {
        compileOnly fg.deobf("curse.maven:cold-sweat-506194:" + project.coldsweat_fileid)
        runtimeOnly fg.deobf("curse.maven:cold-sweat-506194:" + project.coldsweat_fileid)
    }

    if (include_guard_villagers.toBoolean()) {
        implementation fg.deobf("curse.maven:guardvillagers-360203:" + project.guardvillagers_fileid)
    }
}