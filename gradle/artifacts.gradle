
task deobfJar(type: Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    archiveClassifier = "deobf"
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description = 'Creates a JAR containing the JavaDocs.'
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

javadoc {
    options.addBooleanOption('Xdoclint:none', true)
}


artifacts {
    archives sourcesJar
    archives deobfJar
}
//jar.finalizedBy('reobfJar')
//reobf {
//    apiJar { classpath.from(sourceSets.api.compileClasspath) }
//    jar { classpath.from(sourceSets.main.compileClasspath) }
//}
//
//task reobf {
//    dependsOn reobfJar
//    dependsOn reobfApiJar
//}