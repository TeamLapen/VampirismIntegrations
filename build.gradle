plugins {
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.4.5"
    id 'de.undercouch.download' version '3.3.0'
    id 'idea'
    id 'eclipse'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

configurations {
    optionalRuntime
    runtime.extendsFrom optionalRuntime // optionalRuntime dependencies are downloaded but not exported to POM
}

sourceSets {
    main {
        java {
            for(String s : getDisabledFolder(project)) {
                exclude ('**/' + s + '/*')
            }
        }
    }
}

idea {
    module {
        for (String excludeDirName in ["run", "out", "logs"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}

def getDisabledFolder(project) {
    Set<String> set = new HashSet<>();

    if (!include_biomes_o_plenty.toBoolean()) {
        set += 'bop'
    }
    if (!include_waila.toBoolean()) {
        set += 'waila'
    }
    if (!include_immersive_engineering.toBoolean()) {
        set += 'immersive_engineering'
    }
    if (!include_evilcraft.toBoolean()) {
        set += 'evilcraft'
    }
    if (!include_tough_as_nails.toBoolean()) {
        set += 'tan'
    }
    if (!include_nyctophobia.toBoolean()) {
        set += 'graveyard'
    }
    if (!include_survive.toBoolean()) {
        set += 'survive'
    }
    if (!include_diet.toBoolean()) {
        set += 'diet'
    }
    if (!include_tinkers_construction.toBoolean()) {
        set += 'tconstruct'
    }
    if (!include_crafttweaker.toBoolean()) {
        set += 'crafttweaker'
    }
    if (!include_betteranimalsplus.toBoolean()) {
        set += 'betteranimalsplus'
    }
    if (!include_consecration.toBoolean()) {
        set += 'consecration'
    }
    if (!include_minecraft_comes_alive.toBoolean()) {
        set += 'mca'
    }
    if (!include_minecolonies.toBoolean()) {
        set += 'minecolonies'
    }
    if (!include_player_companion.toBoolean()) {
        set += 'player_companion'
    }
    if (!include_betteranimals.toBoolean()) {
        set += 'betteranimals'
    }
    if (!include_bloodmagic.toBoolean()) {
        set += 'bloodmagic'
    }
    if (!include_mekanism.toBoolean()) {
        set += 'mekanism'
    }
    if (!include_jade.toBoolean()) {
        set += 'jade'
    }
    if (!include_cold_sweat.toBoolean()) {
        set += 'coldsweat'
    }

    return set;
}


group = mod_group_id
base {
    archivesName = mod_id
    mod_version = "1.0.0"
}

apply from: 'gradle/artifacts.gradle'
apply from: 'gradle/versioning.gradle'
apply from: 'gradle/forge.gradle'
apply from: 'gradle/deploy.gradle'

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
            jei_version: jei_version,
            vampirism_version: vampirism_version,
            guideapi_version: guideapi_version,
            mod_url: mod_url,
            mod_issue_tracker: mod_issue_tracker,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}
